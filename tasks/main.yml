---

- name: Create oracle install directories
  file:
    path: "{{ item.dir }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items: "{{ oracle_directories }}"

# check if the software is already installed
# additional checks can verify that the install was for the desired oracle_home
- name: Set variable install_oracle_swonly to true
  set_fact:
    install_oracle_swonly: true

- name: Check if /etc/oraInst.loc exists
  stat:
    path: /etc/oraInst.loc
  register: oraInst

- name: Set variable install_oracle_swonly to false
  set_fact:
    install_oracle_swonly: false
  when: oraInst.stat.exists

#- name: Check if database software is already installed
#  stat:
#    path: "{{ oracle_home }}"
#  register: install_directory
#
#- name: Check if /etc/oratab exists
#  stat:
#    path: /etc/oratab
#  register: oratab
#
#- debug:
#    msg: "/etc/oratab does not exists"
#  when: oratab.stat.exists == false

#- name: Check if unzip exists
#  shell: "command -v unzip"
#  register: unzip_exists
#
#- debug:
#    msg: "unzip cannot be found"
#  when: unzip_exists == false

# opatch lsinventory

- name: Run the Oracle DB software only install
  include_tasks: install_swonly.yml
  when: install_oracle_swonly

- name: Apply Critical Patch Updates to the Oracle DB software only install
  include_tasks: apply_cpu.yml
  when: apply_cpu is defined and apply_cpu != ''

# Patch the software with the latest PSU
# check patch level first

- name: Enable Oracle Unified Auditing
  include_tasks: unified_auditing.yml
  when: enable_unified_auditing

# Remove unneeded features from the Oracle binary
- name: chopt disable unneeded features
  include_tasks: chopt_disable.yml
  when: disable_oaa or disable_olap or disable_partitioning or disable_rat